{
"apiVersion": "v1",
"kind": "Pod",
"metadata": {
  "name":"kube-apiserver-{{index}}",
  "namespace": "kube-system",
  "annotations": {
    "scheduler.alpha.kubernetes.io/critical-pod": "",
    "seccomp.security.alpha.kubernetes.io/pod": "docker/default"
  },
  "labels": {
    "tier": "control-plane",
    "component": "kube-apiserver"
  }
},
"spec":{
"hostNetwork": true,
"containers":[
    {
    "name": "kube-apiserver-{{index}}",
    "image": "{{kube_apiserver_images}}",
    "resources": {
      "requests": {
        "cpu": "250m"
      }
    },
    "command": [
                 "/bin/sh",
                 "-c",
                 "exec /usr/local/bin/kube-apiserver --advertise-address={{ansible_host}} --default-not-ready-toleration-seconds=360 --default-unreachable-toleration-seconds=360 --feature-gates=DynamicAuditing=true --max-mutating-requests-inflight=2000 --max-requests-inflight=4000 --default-watch-cache-size=200 --delete-collection-workers=2 --encryption-provider-config=/etc/kubernetes/encryption-config.yaml --etcd-cafile=/etc/kubernetes/ca/ca.pem --etcd-certfile=/etc/kubernetes/certs/kubernetes.pem --etcd-keyfile=/etc/kubernetes/certs/kubernetes-key.pem --etcd-servers={{kube_apiserver_cluster}} --bind-address={{ansible_host}} --secure-port=6443 --tls-cert-file=/etc/kubernetes/certs/kubernetes.pem --tls-private-key-file=/etc/kubernetes/certs/kubernetes-key.pem --insecure-port=0 --audit-dynamic-configuration --audit-log-maxage=15 --audit-log-maxbackup=3 --audit-log-maxsize=100 --audit-log-truncate-enabled --audit-log-path=/var/log/kube-apiserver-audit.log --audit-policy-file=/etc/kubernetes/audit-policy.yaml --profiling --anonymous-auth=false --client-ca-file=/etc/kubernetes/ca/ca.pem --enable-bootstrap-token-auth --requestheader-allowed-names=\"aggregator\" --requestheader-client-ca-file=/etc/kubernetes/ca/ca.pem --requestheader-extra-headers-prefix=\"X-Remote-Extra-\" --requestheader-group-headers=X-Remote-Group --requestheader-username-headers=X-Remote-User --service-account-key-file=/etc/kubernetes/ca/ca.pem --authorization-mode=Node,RBAC --runtime-config=api/all=true --enable-admission-plugins=NodeRestriction --allow-privileged=true --apiserver-count=3 --event-ttl=168h --kubelet-certificate-authority=/etc/kubernetes/ca/ca.pem --kubelet-client-certificate=/etc/kubernetes/certs/kubernetes.pem --kubelet-client-key=/etc/kubernetes/certs/kubernetes-key.pem --kubelet-https=true --kubelet-timeout=10s --proxy-client-cert-file=/etc/kubernetes/certs/proxy-client.pem --proxy-client-key-file=/etc/kubernetes/certs/proxy-client-key.pem --service-cluster-ip-range={{CLUSTER_SVC_CIDR}} --service-node-port-range={{CLUSTER_SVC_NODE_PORT_RANGE}} --logtostderr=true --v=3 1>>/var/log/kube-apiserver.log 2>&1"
               ],
    "volumeMounts": [
        { "name": "encryption-config",
        "mountPath": "/etc/kubernetes/encryption-config.yaml",
        "readOnly": true},
        { "name": "api-server-logfile",
        "mountPath": "/var/log/kube-apiserver.log",
        "readOnly": false},
        { "name": "auditlogfile",
        "mountPath": "/var/log/kube-apiserver-audit.log",
        "readOnly": false},
        { "name": "api-server-certs",
        "mountPath": "/etc/kubernetes/certs",
        "readOnly": true},
        { "name": "ca-cert",
        "mountPath": "/etc/kubernetes/ca",
        "readOnly": true},
        { "name": "audit-policy-config",
        "mountPath": "/etc/kubernetes/audit-policy.yaml",
        "readOnly": true}
      ]
    }
],
"volumes":[
  { "name": "encryption-config",
    "hostPath": {
        "path": "${CLUSTER_CONFIG_DIR}/encryption-config.yaml"}
  },
  { "name": "api-server-logfile",
    "hostPath": {
        "path": "${CLUSTER_LOGS_DIR}/kube-apiserver.log",
        "type": "FileOrCreate"}
  },
  { "name": "auditlogfile",
    "hostPath": {
        "path": "${CLUSTER_LOGS_DIR}/kube-apiserver-audit.log",
        "type": "FileOrCreate"}
  },
  { "name": "api-server-certs",
    "hostPath": {
        "path": "${CLUSTER_CERTS_DIR}/kube-apiserver"}
  },
  { "name": "ca-cert",
    "hostPath": {
        "path": "${CLUSTER_CERTS_DIR}/ca"}
  },
  { "name": "audit-policy-config",
    "hostPath": {
        "path": "${CLUSTER_CONFIG_DIR}/audit-policy.yaml"}
  }
]
}}
